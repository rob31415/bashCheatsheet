___________________________________________________________
FILESYS

ls -ltc
ls -lha
ls -lhatr

locate bla | xargs ls -l

mount -o remount,rw /
cat /proc/mounts

ramdisk:
mount tmpfs somedir -t tmpfs -o size=xxm

windows:
mount -t cifs -o username=sepp //192.168.100.150/abs-temp/mnt/abs-temp/

bind:
mount --rbind ${SOURCE} ${TARGET}

grep -i -r blabla filename
grep -rnw './' -e "public t_Entry" --include=\*.{cpp,h}

ln -s ${TARGET} ${LINKNAME}
HL:
filename1
filename2 --> inode --> data
SL:
filename2 --> inode --> data ("ptrto filename1") --> filename1 --> inode --> data
"rm fn1": HL still works, SL doesn't


file - determine file type (32 or 64 bit, elf, etc.)
which - locate a command
whereis - locate the binary, source, and manual page files for a command
watch - execute a program periodically, showing output fullscreen

du -hs *
du -skh .[A-z]* * | sort -n

only dirs
ls -l | grep `^d'

nfs:
sudo aptitude install nfs-kernel-server
/etc/exports
	/some-shared-dir   192.168.*.*(sync,rw,no_root_squash,no_all_squash)
mount -t nfs 192.168.x.y:/some-shared-dir /home/abs/ -o nolock

ps aux --sort -rss

find and copy:
find -name *.pdf|xargs cp -t .

find files modified after "make install":
find / -cmin -1 | grep -v /dev | grep -v /proc

get rid of .svn dirs:
rm -rf `find . -type d -name .svn`


mount hd-image:
fdisk -l hd.img
kpartx -av hd.img
ls /dev/mapper
mkdir /media/hd
mount /dev/mapper/loop0p5 /media/hd -o loop,ro
umount /media/hd
kpartx -dv hd.img

mount split hd-image:
affuse mysplitrawimage.001 /mnt/fuse
mount -o ro,loop,offset=32256,show_sys_files /mnt/fuse/mysplitrawimage.001.raw /mnt/mymountedimage

rsync --size-only --ignore-existing -r -t --info=progress2 --progress --chmod=F774,D774 --chown=nas:nas /mnt/src/audio/ /mnt/const/audio/

hdd status
hdparm -C /dev/sdX

___________________________________________________________
DEVELOPMENT INFOS

strace - trace system calls and signals
ldd - print shared library dependencies (-d for dynamic so)
ldd --version - find glibc version
readelf -d some.exe - print dependencies
nm - list symbols from object files
objdump -T some.exe - list imported symbols
strings - print the strings of printable characters in files.
strace - trace system calls and signals
ld - The GNU linker

unset LANG
unset LL_ALL

ipcs -q
ipcrm -q id

see .so files in a .a file: ar t someLibArchive.a

c++filt

/usr/i586-mingw32msvc/bin/strip yes.exe

___________________________________________________________
SYS INFOS

cat /etc/network/interfaces
cat /dhcpd3/dhcpdconf

/etc/dhcp3/dhcpd.conf
/etc/dhcp3/terminals.conf
/var/lib/dhcpd/dhcpdleases

/etc/init.d/network restart
ifconfig eth0 down

/etc/init.d
/etc/fstab
/boot/grub/menu.lst

lsusb
lspci

kernel:

uname -a

modprobe -l
/lib/modules
rules.d/70-*

ifconfig -a

less /proc/bus/usb/devices
lsusb -d xxxx:xxxx -v

ethtool
/etc/pam.d
cat /etc/passwd

xlsatoms
xprop
wmctrl -r 'windowname' -b add,above

fuser
lsof -i TCP
lsof ausgabe: CMD, PID, USER, FILEDESCRIPTOR (number or symb+node+lock), FILETYPE, DEVICE, SIZE, NODE, PROCESSNAME

cat /var/log/Xorg.0.log | grep -r "(EE)\|(WW)"
cat /dev/null > somefile

ps faux
vsz virtual size in Kbytes (alias vsize)
rss The real memory (resident set) size of the process (in 1024 byte units).

D Uninterruptible sleep (usually IO)
R Running or runnable (on run queue)
S Interruptible sleep (waiting for an event to complete)
T Stopped, either by a job control signal or because it is being traced.
W paging (not valid since the 2.6.xx kernel)
X dead (should never be seen)
Z Defunct ("zombie") process, terminated but not reaped by its parent.

< high-priority (not nice to other users)
N low-priority (nice to other users)
L has pages locked into memory (for real-time and custom IO)
s is a session leader
l is multi-threaded (using CLONE_THREAD, like NPTL pthreads do)
+ is in the foreground process group


kill -s 9 PID

dump process mem:
cat /proc/[pid]/maps
gdb --pid [pid]
dump memory /root/output 0x00621000 0x00622000

# show hdd health info
smartctl -l selftest /dev/sdb -d sat  # run self test; -d neccessary if problems with usb-hub
smartctl -t short /dev/sdb  # run short / long / conveyance test
smartctl -a /dev/sdb -d sat|less  # see all info


___________________________________________________________
SYS

modprobe efivars ; ls /sys/firmware/efi # if it exists, system is booted via EFI, BIOS compatibility otherwise
Align the partitions on 4K boundaries; Keep "bubbles" of 128 MB in size of unallocated space between  adjacent  partitions
There can be as many EFI partitions as you need. One per disk, or even several on one disk.
efibootmgr -v # list all efi boot menu entries. works only in EFI boot
sudo blkid /dev/sda1 # UUID of partition
ls -l /dev/disk/by-uuid # even better


___________________________________________________________
GRUB & EFI

apt-get install grub-efi-amd64-bin -y --force-yes

grub-mkimage \
  -o ${MOUNTDIR}/EFI/BOOT/bootx64.efi \
  -d /usr/lib/grub/x86_64-efi \ # location of image modules
  -p /efi/boot \ # prefix dir
  -O x86_64-efi \ # format/arch
    fat iso9660 part_gpt part_msdos normal boot linux configfile loopback chain efifwsetup efi_gop \
    efi_uga ls search search_label search_fs_uuid search_fs_file gfxterm gfxterm_background \
    gfxterm_menu test all_video loadenv exfat ext2 ntfs btrfs hfsplus udf \
    crypto.mod cryptodisk.mod luks.mod

By default grub2 does 2 essential things when starting:
-set the prefix variable to a value built-in during grub2 installation
-continue with configuration file $prefix/grub.cfg if it exists
grub.cfg can also be embedded inside .efi binary (-c switch of grub-mkimage)

boot manually from grub shell:
ls
ls (hd0,1)
cat (hd0,1)/etc/somefile
set root=(hd0,1)
linux /boot/vmlinuz-3.13.0-29-generic root=/dev/sda1
initrd /boot/initrd.img-3.13.0-29-generic
boot

grub rescue shell:
grub rescue> set prefix=(hd0,1)/boot/grub
grub rescue> set root=(hd0,1)
grub rescue> insmod normal
grub rescue> normal
grub rescue> insmod linux
grub rescue> linux /boot/vmlinuz-3.13.0-29-generic root=/dev/sda1
grub rescue> initrd /boot/initrd.img-3.13.0-29-generic
grub rescue> boot

after manual stuff, you can update-grub ; grub-install /dev/sdX

grub2-once number_of_the_boot_entr # Set the default boot entry for the next boot only.

crypto:
add GRUB_ENABLE_CRYPTODISK=y and GRUB_CMDLINE_LINUX="cryptdevice=/dev/sda1:lvm"
grub-mkconfig -o grub.cfg ; grub-install /dev/sdX

create LUKS key:
dd bs=512 count=4 if=/dev/urandom of=/keyfile.raw
chmod 000 keyfile.raw ; chmod -R -g-rwx,o-rwx /boot
cryptsetup luksAddKey /dev/sda1 keyfile.raw

add cryptodisk and luks to GRUB_PRELOAD_MODULES in grub.cfg


efibootmgr -b <nr> -B # delete efi entry
efibootmgr -c -d /dev/sdb -p <partitionnr> -L <someLabel> -l /EFI/debian/grubx64.efi
efibootmgr -v # shows partition unique GUID
gdisk /dev/sdX followed by "i" and part-nr shows partition unique GUID

___________________________________________________________
NETWORKING

tunneling:
ssh -L 5900:10.120.150.30:5900 username@125.255.50.60
vnc->localhost:5900

SSH -L 123:localhost:456 sshserver
SSHclient --123-->  | ---456---> sshserver w/ localhost

SSH -L 123:remotesvr:456 sshserver
SSHclient --123-->  | sshserver | 456 remotesvr

traceroute
nmap

check if an upd port is open
sudo nmap -sU -p 8081 hostIpOrHostname

route add default gw 192.168.100.20

netcat:
rx: "nc -l -p 10009" tx from another computer: "echo 'bla' | netcat 192.168.115.1 10009"
netcat udp:
nc -luv 6661 #server
echo '48454c4c6f'|xxd -r -p|netcat -u 127.0.0.1 6661

on liner static content webserver
while true; do echo -e "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\n\r\n" | cat - SOME.html  | nc -l -p 2017; done;

echo -en \\x00\\x00\\x00\\x04\\x01\\x02\\x03\\x04 > bla.dat

printf "GET /bla\r\n\r\n" |nc -i 1 10.127.2.13 8080

ip traffic:
jnettop
iptraf
iftop -P

which process has which IP conn:
sudo netstat -tuapn

find port and dump input on terminal:
sudo netstat -np|grep 45456
nc -l 10.115.3.253 45456

sudo tcpdump -i eth1 udp port 50004 -vv -X

IP-forwarding mit masquerading:
echo 1 > /proc/sys/net/ipv4/ip_forward
iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE

stop x:
  fedora
    init 3
  suse
    rcxdm stop

x-forwarding:
  server:
    sshd_conf
      X11Forwarding yes
      AllowTcpForwarding yes
    export DISPLAY=client_ip:0.0
  client:
    xhost +server_ip
    ssh -Y user@server_ip executable

ip address show (the "new ifconfig")

wifi:
nmcli c
nmcli dev wifi connect <SSID> password <password>

___________________________________________________________
BASH

somecommand 2> error.log
somecommand > outputAndError.log 2>&1

stdout & stderr to null:
cmd &> /dev/null

stdout redir to stderr:
1>&2

stderr redirected to stdout:
2>&1

to send stderr to /tmp/errors.log, stdout to /tmp/output.log and both to /tmp/final.log:
((/path/to/command 2>&1 1>&3 | tee /tmp/errors.log) 3>&1 1>&2 | tee /tmp/output.log) > /tmp/final.log 2>&1

append stdout and stderr to somefile:
cmd &> - >> somefile

jobcontrol:
ctrl-z
bg
disown

search:
find / -name "*.txt" -type f -print -exec grep -H "suchtext" {} \;
find -iname "*.js?" | xargs grep -iR "suchtext"
grep -i -r suchtext filename

nano /sys/devices/system/cpt/cpu0/cpufreq/scaling-governor
"ondemand" oder "performance"
/proc/cpuinfo

~/.bash_history

while true ; do /etc/init.d/absclient start ; sleep 15 ; /etc/init.d/absclient stop ; sleep 4; done

echo blabla >> somefile

count occurrance in file:
consider multiple occ. in same line: grep -o "string" infile | wc -c
otherwise: grep -c "string" infile

/etc/init.d/absclient start
/opt/abs-startup-scripts/

prompt: PS1 in /etc/profile

color output of compile error:
make 2>&1 | sed -e 's/error:/\ \033[0;31m ERR \033[0m /g'
doesnt work yet, because needs echo to interpret the color codes

do something to every file in folder:
for i in *
do
  echo "processing $i"
  convert $i -resize 50% s_$i
done


calculator:
echo "3+4"|bc

___________________________________________________________
sefo.sh

#! /bin/bash
if [ -z $1 ] 
then
    echo "SEach FOr code in current folder. usage: sefo.sh searchstring [-i] [-w] - i=ignore case, w=word"
else
    grep -rn './' -e "$1" $2 $3 --exclude=\*#* --include=\*.{c*,h,t*,py}|less -S
fi

__________________________
USER MANAGEMENT

id
groups
w
who
whoami

/etc/group
groupname|password|groupid|memberlist

/etc/gshadow
grpname|pw|grp-verwalter|memberlist

/etc/passwd
name|pw|uid|gid|info|homedir|shell

/etc/shadow
name|pw|date of change|mind|maxd|warn|exp|dis|res

___________________________________________________________
GENTOO

rc-update show
rc-update add pcscd default
rc-update remove ...
rcconf (debian)

/var/lib/init.d/started/pcscd

nano /etc/init.d/localmount

glxinfo
equery f xnee

/root/.fluxbox

in chroot:
/usr/src/lsmax
make menuconfig

"make $$ ake install modules modules_install"

echo "=blabla ~x86" >> /etc/portage/package.keywords
quickpkg --include -config=y blabla
/usr/portage/packages/...

alsamixer -c0

/etc/conf.d/pcsc*

nano /etc/conf.d/local.start

export PAGER='less -s -R'

cat /dev/input/evtouch_event


___________________________________________________________
TAR

pack:
tar cjpf ../abs_home.tar.bz2 . --exclude ".svn" --exclude "xulrunner"
tar -zcvf archive_name.tar.gz directory_to_compress

list:
tar jtvf abs_home.tar.bz2

unpack:
tar xjpf abs_home.tar.bz2
tar -zxvf archive_name.tar.gz
tar xjrf bla.tbz2 -C /

tarpipe:
cat somefile.tbz2 | ssh IP "tar -xjp -C /"
tar cjpf - . --exclude ".svn" --exclude "xulrunner" | ssh root@192.168.20.161 "tar -xjp -C /home/abs/abs-client"

workterminal:
tar -cjpf /data/abs_home.tar.bz2 .

tarcopy:
tar -cf - <source directory> | (cd /<target directory>;tar -xf -)

single file:
tar --extract --file={tarball.tar} {file}

verschlüsselung:
tar -zcf - todays_backup|openssl des3 -salt -k yourpassword | dd of=todays_backup.des3

entschlüsselung:
dd if= todays_backup.des3 |openssl des3 -d -k yourpassword |tar zxf -

backup:
date ; dd if=/dev/sda bs=512M conv=noerror | split -d -b 5GB - /media/MONOLITH2/backups/nov_2010/work_sda.img.part
160GB = 3h20m

join/restore:
cat file1 file2 > file
dd if=./file of=/dev/sdb bs=512M
80GB = 1/2h

___________________________________________________________
PXE

nfs-server (20.232):
/home/linuximage-boot/images
192.168.20.232:/home/linuximage-boot/AAA-Install/subscripts

pxe-boot-server (20.230):
gethostip
/var/lib/tftpboot/pxelinux.cfg/

__________________________________________________________
MISC

strings /usr/lib/nsbrowser/plugins/libflashplayer.so | grep "LNX"
date -s "10/20/2000 18:45:01"
cat /proc/meminfo
vmstat
head -2 /proc/slabinfo; cat /proc/slabinfo | egrep dentry\|inode
/proc/sys/vm/...
cat /proc/$PROC_ID/status
cat /proc/$PROC_ID/smaps

see binary data: od -v -w16 -tfD somefile

resize image folder with image magik:
mogrify -resize 600x400 -quality 100 -path ./resized/ *.jpg
instead pixel, you can also say "50%"

ldconfig

__________________________________________________________
SCREEN

list: screen -ls
create or reattach to: screen -R rob
detach: ctrl-a d
new win: ctrl-a c
kill win: ctrl-a k
next/prev/jumpto win: ctrl-a n/p/[num]
win selection: ctrl-a "
win list: ctrl-a w
monitor activity on/off: ctrl-a M
monitor silence on/off: ctrl-a _
set win name: ctrl-a A
scroll: ctrl-a ESC
leave scroll: ESC

__________________________________________________________
TEXTPROCESSING

in zeile [von] [bis], schneide alles nach und incl [=] oder [;] ab und entferne leere zeilen
sed -e 's/=.*//' -e 's/;.*//' -e '/^$/d' -ne 1503,1753p somefile.txt > out.txt

ersetze pro zeile alle darin vorkommenden [, ] durch [newline] (g wie global)
sed -ne 's/, /\n/pg' out.txt

__________________________________________________________
AUTH

cd /root/.ssh ; ssh-keygen -t dsa -f terminal-key ; cat terminal-key.pub | ssh root@192.168.20.121 "cat >> /root/.ssh/authorized_keys"
ssh -i /root/.ssh/terminal-key

ssh -o PreferredAuthentications=password root@nasigoreng

ssh-copy-id user@someserver

___________________________________________________________
CVS

update to rev: cvs up -r revision filename
whats going on: cvscheck
get from server, dont merge, maybe delete file: cvs update -C
unstickie-fy files: cvs up -r HEAD ; cvs up -A

__________________________________________________________
WIN32

runas /user:administrator cmd somePassword
ewfmgr c: -commit

___________________________________________________________
UBUNTU

update:
apt-get update
apt-get upgrade

which packets are installed:
dpkg --get-selections

where are files of packet installed:
dpkg -L packetname

disable touchpad:
xinput set-prop 12 "Device Enabled" 0
xinput --disable 12

update-java-alternatives -l
update-java-alternatives -s java-6-sun


___________________________________________________________
X11

sudo xrandr --output HDMI1 --primary
sudo xrandr --output eDP1 --right-of HDMI1
xrandr --output eDP1 --mode 1920x1080
setxkbmap de
search the win-visualId with xwininfo, find rgb masks with xdpyinfo using the visualid
xvinfo


___________________________________________________________
GIT

create new branch and take uncommitted changes over:
git checkout -b newBranch

revert from unstaged changes to last commit, do something, and redo changes:
git stash   # save current changes to "stash" stack
git checkout .
... do something ...
git stash apply   # pop changes from stash stack and apply them right here


git checkout .
git add
git commit
git pull --rebase
git push
git-reset HEAD filename


___________________________________________________________
ZFS

creating zfs on a single hdd (linux):

zpool create -f YOURPOOLNAME /dev/sdX
zfs create YOURPOOLNAME/YOURNAME

mount: sudo zpool import -fa or zpool import YOURPOOLNAME
unmount: sudo zpool export YOURNAME

list all pools: (works olny after mountin/importing): zfs list


___________________________________________________________
GDB

compile with -g (CFLAGS =-g in Makefile)
gdb executable.exe -tui
run SOME_PRG_ARGS > redirectStdOutHere.somefile

backtrace

list sourcefile.c:5

b someSourcfile.cpp:5  (breakpoint)
clear 5 (remove breakpoint at line)
n (for next)
s (step into)
c (continue)
ctrl-C (stop wherever execution currently is)

print someVarInScope

disp someVarInScope
undisplay Number

RETURN repeats last command and TAB-completion exists


__________________________________________________________
SNIFFING

tcpdump -s 0 -i eth0 -w traffic0.pcap


__________________________________________________________
SYSTEMD

systemctl enable tomcat.service
systemctl start tomcat.service
service postgresql restart
journalctl -b

____________________________________________________________
ARCH

pacman -S packageToInstall

sys update: pacman -Syu
some weird errors:
pacman-key --refresh-keys
pacman -Syuw
rm /etc/ssl/certs/ca-certificates.crt
pacman -Syu

do this every week to keep rolling released distro up to date:
update db: pacman -Syy
update: pacman -Su

_____________________________________________________________
BTRFS

clone partition:
partclone.btrfs -b -s /dev/sdb -O /dev/sda -R -d
attention! do not attach original and cloned drives simultaneously, because they share the same GUID

btrfs scrub [start|status|cancel] /mnt/other

create storage pool:
btrfs device add /dev/sdX /mnt
btrfs device add /dev/sdY /mnt
...

balance between all drives:
btrfs filesystem balance /mnt

span fs over more drives w different sizes:
mkfs.btrfs -d single /dev/sdX /dev/sdY ...

incremental backup init:
btrfs subvolume snapshot -r /home /home/BACKUP; sync
btrfs send /home/BACKUP | btrfs receive /backup/home

incremental backup iterations:
btrfs subvolume snapshot -r /home /home/BACKUP-new; sync
btrfs send -p /home/BACKUP /home/BACKUP-new | btrfs receive /backup/home

then, delete from before local and on backup drive
btrfs subvolume delete /home/BACKUP
mv /home/BACKUP-new /home/BACKUP
btrfs subvolume delete /backup/home/BACKUP
mv /backup/home/BACKUP-new /backup/home/BACKUP

or keep it around w timestamp
btrfs subvolume snapshot -r /backup/home/BACKUP /backup/home.$(date +%Y-%m-%d)

dont have a cow, man: chattr +C -R dirname ; lsattr



